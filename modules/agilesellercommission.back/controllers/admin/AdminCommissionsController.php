<?php
///-build_id: 2017010213.5255
/// This source file is subject to the Software License Agreement that is bundled with this 
/// package in the file license.txt, or you can get it here
/// http://addons-modules.com/en/content/3-terms-and-conditions-of-use
///
/// @copyright  2009-2016 Addons-Modules.com
///  If you need open code to customize or merge code with othe modules, please contact us.
include_once(_PS_ROOT_DIR_.'/modules/agilesellercommission/SellerCommission.php');
include_once(_PS_ROOT_DIR_.'/modules/agilesellercommission/agilesellercommission.php');
include_once(_PS_ROOT_DIR_.'/modules/agilemultipleseller/agilemultipleseller.php');

class AdminCommissionsController extends ModuleAdminController
{    
	private $_offline_form_visible = false;
	private static $id_commission_currency = 0;

	public function __construct()   {    $this->bootstrap = true;    $this->table = 'seller_commission';     $this->className = 'SellerCommission';    self::$id_commission_currency = (int)Configuration::get('ASC_COMMISSION_CURRENCY');      parent::__construct();      $this->allow_export = true;    $this->lang = false;    $this->list_no_link = true;    $this->actions = [];        if(!$this->is_seller)    {     $this->addRowAction('edit');   $this->addRowAction('delete');  }    $this->_join = '            LEFT JOIN `'._DB_PREFIX_.'sellerinfo` s ON (a.`id_seller`=s.`id_seller`)            LEFT JOIN `'._DB_PREFIX_.'sellerinfo_lang` sl ON (sl.`id_sellerinfo`=s.`id_sellerinfo` AND sl.id_lang=' . $this->context->language->id . ')            LEFT JOIN `'._DB_PREFIX_.'orders` o ON (a.`id_order`=o.`id_order`)      LEFT JOIN `'._DB_PREFIX_.'order_state` os ON (os.`id_order_state` = o.`current_state`)      LEFT JOIN `'._DB_PREFIX_.'order_state_lang` osl ON (os.`id_order_state` = osl.`id_order_state` AND osl.`id_lang` = '.(int)$this->context->language->id.')      LEFT JOIN  `'._DB_PREFIX_.'customer` c on o.id_customer = c.id_customer        ';         $this->_select = 'sl.company AS seller                       ,LEFT(a.memo,80) as memo2        ,o.reference        ,o.invoice_number        ,o.id_order as order_no        ,osl.name as osname            ,CONCAT(`firstname`, \'. \', c.`lastname`) AS `customer`               ';      $this->_where = ' AND a.id_seller > 0';      $RDD4F8E2A072EBB23651F27235C0E8A0E = array();    $R022D3BEE6E5A22014EBFBB4AE8A2104A = OrderState::getOrderStates((int)$this->context->language->id);      foreach ($R022D3BEE6E5A22014EBFBB4AE8A2104A as $R971D98E0AD23E0905A3D3F4B08D46579)     $RDD4F8E2A072EBB23651F27235C0E8A0E[$R971D98E0AD23E0905A3D3F4B08D46579['id_order_state']] = $R971D98E0AD23E0905A3D3F4B08D46579['name'];      $R730C7EE9671C765BDB07E91B2237FB78 = array();    $R730C7EE9671C765BDB07E91B2237FB78[3] = $this->l('Customer paid to store');    $R730C7EE9671C765BDB07E91B2237FB78[1] = $this->l('Customer paid to seller');    $R730C7EE9671C765BDB07E91B2237FB78[2] = $this->l('Customer paid to both seller and store');    $R730C7EE9671C765BDB07E91B2237FB78[101] = $this->l('Seller paid to store');    $R730C7EE9671C765BDB07E91B2237FB78[102] = $this->l('Store paid to seller');    $R730C7EE9671C765BDB07E91B2237FB78[-1] = $this->l('Cancellation');          $this->fields_list = array(     'id_seller_commission' => array('title' => $this->l('ID'), 'align' => 'center'),     'seller' => array('title' => $this->l('Seller Name'), 'align' => 'left',  'tmpTableFilter' => true),     'order_no' => array('title' => $this->l('Order ID'), 'align' => 'center', 'tmpTableFilter' => true, 'fielter_key' => 'o!id_order'),     'record_type' => array('title' => $this->l('Txn type'), 'align' => 'left', 'callback'=>'displayRecordType',          'type' => 'select',       'list' => $R730C7EE9671C765BDB07E91B2237FB78,       'filter_key' => 'a!record_type',       'filter_type' => 'int'            ),      'sales_amount' => array('title' => $this->l('Sales'), 'align' => 'text-right', 'type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'base_commission' => array('title' => $this->l('Txn Fee'), 'align' => 'text-right', 'type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'range_commission' => array('title' => $this->l('Commission'), 'align' => 'text-right','type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'deduction_amount' => array('title' => $this->l('Deduction'), 'align' => 'text-right','type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'seller_sales' => array('title' => $this->l('Income'), 'align' => 'text-right', 'type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'record_balance' => array('title' => $this->l('Credit/Debit'), 'align' => 'text-right','type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'balance' => array('title' => $this->l('Balance'), 'align' => 'text-right','type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),      'date_add' => array('title' => $this->l('Date'), 'align' => 'left','type' => 'datetime', 'width'=>60, 'filter_key' => 'a!date_add'),    );       if(Module::isInstalled('agileprepaidcredit'))    {     $this->fields_list['tokens_used'] =  array('title' => $this->l('Tokens Used'), 'align' => 'text-right', 'type' => 'price', 'currency' => true,'callback' => 'setCommissionCurrency');    }              if(Module::isInstalled('prestabay'))          {              $R40DE9392BE7BDDAB3A92A358393830DA = array(0 => $this->l('Shop'), 1 => $this->l('eBay'));              $this->fields_list['order_origin'] = array('title' => $this->l('Order Origin'), 'align' => 'right','width' => 60, 'type' => 'select','select' => $R40DE9392BE7BDDAB3A92A358393830DA, 'filter_key' => 'a!order_origin');          }              if($this->is_seller)    {     $this->_where = $this->_where . ' AND a.id_seller = ' . intval($this->context->cookie->id_employee);          unset($this->fields_list['id_seller']);     unset($this->fields_list['seller']);    }     }     public function initToolbar()   {    parent::initToolbar();    unset($this->toolbar_btn['new']);   }     public function renderList()   {    return  $this->showTopForm(). parent::renderList() . $this->showBottomNotes();   }     public function showBottomNotes()   {    $RF5F34553F19884D9FFFA632FD820CDA3 = '';          $RF5F34553F19884D9FFFA632FD820CDA3 .= '&nbsp;&nbsp;1. <b>' .$this->l('Credit/Debit') . '</b>&nbsp;&nbsp; - &nbsp;&nbsp;' . $this->l('Negative amount means Seller owes money to Store.  Postive amount means Seller will receive money.') . '<BR />';          $RF5F34553F19884D9FFFA632FD820CDA3 .= '&nbsp;&nbsp;2. ' . $this->l('To see current outstanding balance and perform a payment, please click the "Account Balance" option.');    return $RF5F34553F19884D9FFFA632FD820CDA3;   }      public function getSummaryRow()   {    $R84C661C9788A04645317D80D072B43FB = '';       $R84C661C9788A04645317D80D072B43FB .= '<tr style="background:yellow;font-size:larger">';       $currency = new Currency( Configuration::get('ASC_COMMISSION_CURRENCY'));          $R617EFB138DF2DC19B0CE4F42D3E9F81D = array_keys($this->fields_list);           foreach($R617EFB138DF2DC19B0CE4F42D3E9F81D AS $RDC72801A64A9084B77642D2A5707C5BD)          {     if($RDC72801A64A9084B77642D2A5707C5BD == 'record_type')      $R84C661C9788A04645317D80D072B43FB .= '<td>' .$this->l('Total') . '</td>';     else if(in_array($RDC72801A64A9084B77642D2A5707C5BD,array('sales_amount','base_commission','deduction_amount','range_commission','seller_sales','record_balance','balance','tokens_used')))        $R84C661C9788A04645317D80D072B43FB .= '<td align="right"><b>' . Tools::displayPrice($this->getTotal($RDC72801A64A9084B77642D2A5707C5BD),$currency) . '</b></td>';              else       $R84C661C9788A04645317D80D072B43FB .= '<td>&nbsp;</td>';          }         $R84C661C9788A04645317D80D072B43FB .= '</tr>';      return $R84C661C9788A04645317D80D072B43FB;   }      public function postProcess()   {       if(Tools::isSubmit('btnAddPayment'))       {           $R5251F4B2CAF352310AF6954B82962DD7 = true;           $R95909C49377A2B4F24C79D29C629AF65 = intval(Tools::getValue('id_seller'));           $R68EAF33C4E51B47C7219F805B449C109 = floatval(Tools::getValue('payment_amount'));           $RBDF1E52780E67C6D25724A766C4FDB32 = intval(Tools::getValue('record_type'));           if($R95909C49377A2B4F24C79D29C629AF65 <=0)           {         $this->errors[] = $this->l('Invalid seller');               $R5251F4B2CAF352310AF6954B82962DD7 = false;              }           if($R68EAF33C4E51B47C7219F805B449C109 <=0)           {         $this->errors[] = $this->l('Invalid payment amount, please enter positive amounts only');               $R5251F4B2CAF352310AF6954B82962DD7 = false;              }              if(!in_array($RBDF1E52780E67C6D25724A766C4FDB32, array(SellerCommission::RECORD_TYPE_STORE_PAY_SELLER,SellerCommission::RECORD_TYPE_SELLER_PAY_STORE)))              {      $this->errors[] = $this->l('Invalid record type');               $R5251F4B2CAF352310AF6954B82962DD7 = false;              }              if(!$R5251F4B2CAF352310AF6954B82962DD7)              {                  $this->_offline_form_visible = true;                  return;              }       SellerCommission::addCreditMemoRecord($R95909C49377A2B4F24C79D29C629AF65, $RBDF1E52780E67C6D25724A766C4FDB32, $R68EAF33C4E51B47C7219F805B449C109, $this->l('Offline Payment'), Tools::getValue('txn_id'));                   echo '<span style="color:Green">' . $this->l('Payment record added successfully'). '</span>';              $this->_offline_form_visible = false;                            $_POST = array();                   Tools::redirectAdmin("index.php?controller=AdminCommissions&token=" . $this->token);             return ;       }       parent::postProcess();      }         public function showTopForm()   {          if ($this->is_seller) return;      $R5D8E95289BF25691AFBFC745FD98DE78 = Tools::getValue('token');    if(empty($R5D8E95289BF25691AFBFC745FD98DE78))    {     $RB4A77BC9E0507B382055DA0AAD0778E1 = Tab::getIdFromClassName('AdminCommissions');     $R5D8E95289BF25691AFBFC745FD98DE78 = Tools::getAdminToken('AdminCommissions' .intval($RB4A77BC9E0507B382055DA0AAD0778E1).intval($this->context->cookie->id_employee));    }    $R4C40966EA8337EFDF326315499413376= AgileSellerManager::getSellersNV(false,'--');    $currency = new Currency( Configuration::get('ASC_COMMISSION_CURRENCY'));      $RC7FD052EF04B68D515A3A4C3D7999268 = '';       $RC7FD052EF04B68D515A3A4C3D7999268 .= '       <script language="javascript" type="text/javascript">           var form_visible = ' . ($this->_offline_form_visible?'true':'false') . ';           function showForm() {               if (form_visible) $("form#offline_form").hide();               else $("form#offline_form").show();               form_visible = !form_visible;           }       </script>       <div><span style="color:Blue;"><h3>          ' .$this->l('You can add payment records that happened outside of online store to adjust/maintain/correct seller account balances') . '&nbsp;       <input type="button" class="btn btn-primary" name="btnAddOfflineRecord" onclick="showForm()" value="' . $this->l('Add offline payment record'). '"/>          </h3>          </span>    <form action="./index.php?controller=AdminCommissions&token=' . $R5D8E95289BF25691AFBFC745FD98DE78. '" id="offline_form" name="offline_form" onsubmit="return submmitPayment();" method="post" style="display:' . ($this->_offline_form_visible?'':'none') . ';">    Seller:&nbsp;    <select name="id_seller" onChange="javascript:getBalance(this.value)">    ';        foreach ($R4C40966EA8337EFDF326315499413376 AS $R17AC9BFA1ABB066C772CEAE0B3CD86E9)     $RC7FD052EF04B68D515A3A4C3D7999268 .= '<option value="'.$R17AC9BFA1ABB066C772CEAE0B3CD86E9['id_seller'].'"'.' ' . ($R17AC9BFA1ABB066C772CEAE0B3CD86E9['id_seller']==Tools::getValue('id_seller')?'selected':'') . '>'.stripslashes($R17AC9BFA1ABB066C772CEAE0B3CD86E9['name']).'</option>';      $RC7FD052EF04B68D515A3A4C3D7999268 .= '</select>&nbsp;&nbsp;&nbsp;    Payment Type:&nbsp;     <select name="record_type" >        <option value="0">--</option>     <option value='. SellerCommission::RECORD_TYPE_STORE_PAY_SELLER .'  ' . (SellerCommission::RECORD_TYPE_STORE_PAY_SELLER==Tools::getValue('record_type')?'selected':'') . '>'.$this->l('Store paid to seller').'</option>     <option value='. SellerCommission::RECORD_TYPE_SELLER_PAY_STORE .'  ' . (SellerCommission::RECORD_TYPE_SELLER_PAY_STORE==Tools::getValue('record_type')?'selected':'') . '>'.$this->l('Seller paid to store').'</option>    </select>&nbsp;&nbsp;&nbsp;          Payment Amount:&nbsp;    <input type="text" size="6" name="payment_amount" value="' . Tools::getValue('payment_amount'). '" />&nbsp;' .$currency->sign . '(' . $currency->name . ') &nbsp;&nbsp;&nbsp;            Transaction ID:&nbsp;    <input type="text" size="16" name="txn_id" value="' . Tools::getValue('txn_id'). '" />&nbsp;&nbsp;&nbsp;    <input type="submit" name="btnAddPayment" value="' . $this->l('Save') .'" class="btn btn-primary" />       </form>     </div>           ';            return $RC7FD052EF04B68D515A3A4C3D7999268;       }           public static function displayPayLink($R7D0596C36891967F3BB9D994B4A97C19, $R7318A606A3118D468DAE7078098FBA7B)   {    if((float)$R7D0596C36891967F3BB9D994B4A97C19 <=0)return "--";        $R04E66113B73FC83C1BF02292707E396D = array(     'record_type' => SellerCommission::RECORD_TYPE_STORE_PAY_SELLER,     'id_seller' => $R7318A606A3118D468DAE7078098FBA7B['id_commission_balance'],     'amount_to_pay' => floatval($R7D0596C36891967F3BB9D994B4A97C19),     'retkey' => Tools::getValue('token'),     'paykey' => Tools::encrypt($R7318A606A3118D468DAE7078098FBA7B['id_commission_balance'])    );      return  '     <a href="' . AgileSellerCommission::get_paycommission_url($R04E66113B73FC83C1BF02292707E396D) . '">     <img src="' . __PS_BASE_URI__ . 'modules/agilesellercommission/img/pay.png" alt="'.('Pay Commission').'" title="'.('Pay Commission').'" /></a>';       }      public function displayInvoiceNumber($R7D0596C36891967F3BB9D994B4A97C19, $R7318A606A3118D468DAE7078098FBA7B)   {    $R843772E13ECF32C5CEEF23010FB27FBA = Context::getContext()->language->id;    $R368F0365A446C4BDF2D2FCA04DF2B35B = 1;    $REB66C46D3229C1C94FB923CAA907A5B5 = '%1$s%2$06d';      if (Configuration::get('PS_INVOICE_USE_YEAR')) {     $REB66C46D3229C1C94FB923CAA907A5B5 = Configuration::get('PS_INVOICE_YEAR_POS') ? '%1$s%3$s/%2$06d' : '%1$s%2$06d/%3$s';    }      return sprintf($REB66C46D3229C1C94FB923CAA907A5B5, Configuration::get('PS_INVOICE_PREFIX', (int)$R843772E13ECF32C5CEEF23010FB27FBA, null, (int)$R368F0365A446C4BDF2D2FCA04DF2B35B), $R7D0596C36891967F3BB9D994B4A97C19, '');   }      public function displayRecordType($R7D0596C36891967F3BB9D994B4A97C19, $R7318A606A3118D468DAE7078098FBA7B)      {    switch ((int)$R7D0596C36891967F3BB9D994B4A97C19)    {     case SellerCommission::RECORD_TYPE_BUYER_PAY_STORE:      return $this->l('Customer Paid to Store');         case SellerCommission::RECORD_TYPE_BUYER_PAY_SELLER:      return $this->l('Customer Paid to Seller');         case SellerCommission::RECORD_TYPE_BUYER_PAY_BOTH:      return $this->l('Customer Paid to Seller&Store');        case SellerCommission::RECORD_TYPE_SELLER_PAY_STORE:      return $this->l('Seller Paid to Store');         case SellerCommission::RECORD_TYPE_STORE_PAY_SELLER:      return $this->l('Store Paid to Seller');         case SellerCommission::RECORD_TYPE_ORDER_CANCELLATION:      return $this->l('Order Cancellation');         default:      return '--';    }      }     private function getTotal($RDC72801A64A9084B77642D2A5707C5BD)   {    $RFF073106DF53C7C31BC2E1F5598ABC67 = 0;    foreach($this->_list AS $R0F8134FB6038EBCD7155F1DE5F067C73)      $RFF073106DF53C7C31BC2E1F5598ABC67 += (float)($R0F8134FB6038EBCD7155F1DE5F067C73[$RDC72801A64A9084B77642D2A5707C5BD]);    return $RFF073106DF53C7C31BC2E1F5598ABC67;   }      public static function setCommissionCurrency($R7EEF19FC5649E7794F922BF96203A43C, $R08A3F2CD13353414E9C62A1132D2FB78)   {    return Tools::displayPrice($R7EEF19FC5649E7794F922BF96203A43C, self::$id_commission_currency);   }      public function processExport($RFEDA7985AFBDB14D68E1F192F5C65751 = '"')   {      if (ob_get_level() && ob_get_length() > 0) {     ob_clean();    }    $this->getList($this->context->language->id, null, null, 0, false);    if (!count($this->_list)) {     return;    }      header('Content-type: text/csv');    header('Content-Type: application/force-download; charset=UTF-8');    header('Cache-Control: no-store, no-cache');    header('Content-disposition: attachment; filename="'.$this->table.'_'.date('Y-m-d_His').'.csv"');      $R50BD3413F20BB2B33E8E18758D97431F = array();    foreach ($this->fields_list as $RF413F06AEBBCEF5E1C8B1019DEE6FE6B => $R069EFE256450F0703601DBCAB9B56FD3) {     if ($R069EFE256450F0703601DBCAB9B56FD3['title'] == 'PDF') {      unset($this->fields_list[$RF413F06AEBBCEF5E1C8B1019DEE6FE6B]);     } else {      $R50BD3413F20BB2B33E8E18758D97431F[] = Tools::htmlentitiesDecodeUTF8($R069EFE256450F0703601DBCAB9B56FD3['title']);     }    }    $RE82EE9B121F709895EF54EBA7FA6B78B = array();    foreach ($this->_list as $RA16D2280393CE6A2A5428A4A8D09E354 => $R4EEB713E57BBAAF1217CF39632604473) {     $RE82EE9B121F709895EF54EBA7FA6B78B[$RA16D2280393CE6A2A5428A4A8D09E354] = array();     $R9C15EBBFA2A803B9C3700DD656CA18C4 = false;     foreach ($this->fields_list as $RF413F06AEBBCEF5E1C8B1019DEE6FE6B => $RC2D2567438B1F39DD71F78195B5F3DED) {      $RDBC4F15B71086244573BB8CC75E1FCCB = isset($R4EEB713E57BBAAF1217CF39632604473[$RF413F06AEBBCEF5E1C8B1019DEE6FE6B]) ? Tools::htmlentitiesDecodeUTF8(Tools::nl2br($R4EEB713E57BBAAF1217CF39632604473[$RF413F06AEBBCEF5E1C8B1019DEE6FE6B])) : '';      if ($RF413F06AEBBCEF5E1C8B1019DEE6FE6B == 'image') {       if ($RC2D2567438B1F39DD71F78195B5F3DED['image'] != 'p' || Configuration::get('PS_LEGACY_IMAGES')) {        $R9C15EBBFA2A803B9C3700DD656CA18C4 = Tools::getShopDomain(true)._PS_IMG_.$RC2D2567438B1F39DD71F78195B5F3DED['image'].'/'.$R4EEB713E57BBAAF1217CF39632604473['id_'.$this->table].(isset($R4EEB713E57BBAAF1217CF39632604473['id_image']) ? '-'.(int)$R4EEB713E57BBAAF1217CF39632604473['id_image'] : '').'.'.$this->imageType;       } else {        $R9C15EBBFA2A803B9C3700DD656CA18C4 = Tools::getShopDomain(true)._PS_IMG_.$RC2D2567438B1F39DD71F78195B5F3DED['image'].'/'.Image::getImgFolderStatic($R4EEB713E57BBAAF1217CF39632604473['id_image']).(int)$R4EEB713E57BBAAF1217CF39632604473['id_image'].'.'.$this->imageType;       }       if ($R9C15EBBFA2A803B9C3700DD656CA18C4) {        $RDBC4F15B71086244573BB8CC75E1FCCB = $R9C15EBBFA2A803B9C3700DD656CA18C4;       }      }      if (isset($RC2D2567438B1F39DD71F78195B5F3DED['callback'])) {       $R7FD08D17E9B25F8F3BC16C290258A52E = (isset($RC2D2567438B1F39DD71F78195B5F3DED['callback_object'])) ? $RC2D2567438B1F39DD71F78195B5F3DED['callback_object'] : $this->context->controller;       if (!preg_match('/<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)/ism', call_user_func_array(array($R7FD08D17E9B25F8F3BC16C290258A52E, $RC2D2567438B1F39DD71F78195B5F3DED['callback']), array($RDBC4F15B71086244573BB8CC75E1FCCB, $R4EEB713E57BBAAF1217CF39632604473)))) {        $RDBC4F15B71086244573BB8CC75E1FCCB = call_user_func_array(array($R7FD08D17E9B25F8F3BC16C290258A52E, $RC2D2567438B1F39DD71F78195B5F3DED['callback']), array($RDBC4F15B71086244573BB8CC75E1FCCB, $R4EEB713E57BBAAF1217CF39632604473));       }      }      $RE82EE9B121F709895EF54EBA7FA6B78B[$RA16D2280393CE6A2A5428A4A8D09E354][] = $RDBC4F15B71086244573BB8CC75E1FCCB;     }    }          $RA16D2280393CE6A2A5428A4A8D09E354++;    $currency = new Currency( Configuration::get('ASC_COMMISSION_CURRENCY'));    $R617EFB138DF2DC19B0CE4F42D3E9F81D = array_keys($this->fields_list);     foreach($R617EFB138DF2DC19B0CE4F42D3E9F81D AS $RDC72801A64A9084B77642D2A5707C5BD)    {     if($RDC72801A64A9084B77642D2A5707C5BD == 'record_type')      $RE82EE9B121F709895EF54EBA7FA6B78B[$RA16D2280393CE6A2A5428A4A8D09E354][] = $this->l('Total');     else if(in_array($RDC72801A64A9084B77642D2A5707C5BD,array('sales_amount','base_commission','deduction_amount','range_commission','seller_sales','record_balance','balance','tokens_used')))        $RE82EE9B121F709895EF54EBA7FA6B78B[$RA16D2280393CE6A2A5428A4A8D09E354][] = Tools::displayPrice($this->getTotal($RDC72801A64A9084B77642D2A5707C5BD),$currency);     else       $RE82EE9B121F709895EF54EBA7FA6B78B[$RA16D2280393CE6A2A5428A4A8D09E354][] = '';    }              $this->context->smarty->assign(array(     'export_precontent' => "",     'export_headers' => $R50BD3413F20BB2B33E8E18758D97431F,     'export_content' => $RE82EE9B121F709895EF54EBA7FA6B78B,     'text_delimiter' => $RFEDA7985AFBDB14D68E1F192F5C65751     )      );      $this->layout = _PS_ROOT_DIR_ . '/modules/agilesellercommission/views/templates/admin/commision-report.tpl';   }        }      