<?php
///-build_id: 2017010213.5255
/// This source file is subject to the Software License Agreement that is bundled with this 
/// package in the file license.txt, or you can get it here
/// http://addons-modules.com/en/content/3-terms-and-conditions-of-use
///
/// @copyright  2009-2016 Addons-Modules.com
///  If you need open code to customize or merge code with othe modules, please contact us.
include_once(_PS_ROOT_DIR_.'/modules/agilesellercommission/CommissionBalance.php');
include_once(_PS_ROOT_DIR_.'/modules/agilesellercommission/SellerCommission.php');
include_once(_PS_ROOT_DIR_.'/modules/agilesellercommission/agilesellercommission.php');

class AdminCommissionBalancesController extends ModuleAdminController
{    
	private static $id_commission_currency = 0;

	public function __construct()   {    self::$id_commission_currency = (int)Configuration::get('ASC_COMMISSION_CURRENCY');    $this->bootstrap = true;    $this->table = 'commission_balance';     $this->className = 'CommissionBalance';     $this->identifier = 'id_commission_balance';      parent::__construct();               $this->lang = false;     $this->list_no_link = true;        $this->fields_list = array(     'id_commission_balance' => array('title' => $this->l('Seller ID'), 'align' => 'center', 'width' => 25),     'seller' => array('title' => $this->l('Seller Name'), 'align' => 'right', 'width' => 50),     'balance' => array('title' => $this->l('Balance'), 'width' => 150,'align' => 'right', 'type' => 'price', 'currency' => true, 'callback' => 'setCommissionCurrency'),     'topay' =>array('title' => $this->l('Action'), 'width' => 150,'align' => 'right',  'callback'=>'displayPayLink')         );   }      public function initToolbar()   {    parent::initToolbar();    unset($this->toolbar_btn['new']);   }      public function renderList()   {    if(!$this->is_seller)    {     return  parent::renderList() . $this->showBottomNotes();    }        return $this->showSelleBalanceInfo();   }      public function displayPayLink($R7D0596C36891967F3BB9D994B4A97C19, $R7318A606A3118D468DAE7078098FBA7B)   {    if((float)$R7D0596C36891967F3BB9D994B4A97C19 <=0)return "--";    if((int)Configuration::get('ASC_USE_PAYPAL') != 1)return "--";        $R04E66113B73FC83C1BF02292707E396D = array(     'record_type' => SellerCommission::RECORD_TYPE_STORE_PAY_SELLER,     'id_seller' => $R7318A606A3118D468DAE7078098FBA7B['id_commission_balance'],     'amount_to_pay' => floatval($R7D0596C36891967F3BB9D994B4A97C19),     'retkey' => Tools::getValue('token'),     'paykey' => Tools::encrypt($R7318A606A3118D468DAE7078098FBA7B['id_commission_balance'])    );      return  '     <a href="' . AgileSellerCommission::get_paycommission_url($R04E66113B73FC83C1BF02292707E396D) . '">     <img src="' . __PS_BASE_URI__ . 'modules/agilesellercommission/img/pay.png" alt="'.$this->l('Pay Commission').'" title="'.$this->l('Pay Commission').'" /></a>';       }      public function showBottomNotes()   {    $RF5F34553F19884D9FFFA632FD820CDA3 = "";    $RF5F34553F19884D9FFFA632FD820CDA3 .= '<p>' . $this->l('Negative account: Seller owes store owner. Seller need to pay store owner.') . '</p>';          $RF5F34553F19884D9FFFA632FD820CDA3 .= '<p>' .$this->l('Postive account: Store owner owes seller. Store owner needs to pay seller the sales of products.') . '</p>';        $R826CDCC9F7B21AC69CA39140F15F9DA9 = Tools::getShopDomainSsl(true,true) . __PS_BASE_URI__ . "modules/agilepaypalmasspay/execute.php";    if(version_compare(_PS_VERSION_, '1.5', '>='))    {     $R826CDCC9F7B21AC69CA39140F15F9DA9 = Context::getContext()->link->getModuleLink('agilepaypalmasspay', 'execute', array(), true);    }        return $RF5F34553F19884D9FFFA632FD820CDA3;   }         public function showSelleBalanceInfo()      {    $R034AE2AB94F99CC81B389A1822DA3353 = "";           $R130D64A4AD653C91E0FD80DE8FEADC3A = 'SELECT SUM(sc.record_balance) AS balance           FROM `'._DB_PREFIX_ . 'seller_commission` sc           WHERE id_seller=' . $this->context->cookie->id_employee . '            ';                        $RCC10F697B15DDBF453B97188A03BE2BD = Db::getInstance()->getValue($R130D64A4AD653C91E0FD80DE8FEADC3A);          $R3DEFF80D8CF2D09D237728AF966CB84B = $this->l('Pay Now');          $R1849DF6AF84C6815023B2D6532697EDA = 'black';          if($RCC10F697B15DDBF453B97188A03BE2BD <0)$R1849DF6AF84C6815023B2D6532697EDA = 'red';    $R28CB95CC5EDD83F8B305E4CDEE816851 = new Currency(self::$id_commission_currency);        $R034AE2AB94F99CC81B389A1822DA3353 .= $this->l('Your account balance is'). ': <span style="font-size:xx-large;color:' . $R1849DF6AF84C6815023B2D6532697EDA . '">' . Tools::displayPrice(floatval($RCC10F697B15DDBF453B97188A03BE2BD),$R28CB95CC5EDD83F8B305E4CDEE816851) . '</span><br /><br />';          if($RCC10F697B15DDBF453B97188A03BE2BD <0)          {     $R04E66113B73FC83C1BF02292707E396D = array(      'record_type' => SellerCommission::RECORD_TYPE_SELLER_PAY_STORE,      'id_seller' => $this->context->cookie->id_employee,      'amount_to_pay' => (-$RCC10F697B15DDBF453B97188A03BE2BD),      'retkey' => Tools::getValue('token'),      'paykey' => Tools::encrypt($this->context->cookie->id_employee)     );         if((int)Configuration::get('ASC_USE_PAYPAL') == 1)     {      $R034AE2AB94F99CC81B389A1822DA3353 .=  $this->l('Payment to store owner this owed for commissions on sales.'). '          <br /><br /><a href="'.  AgileSellerCommission::get_paycommission_url($R04E66113B73FC83C1BF02292707E396D) . '">          ' . $this->l('Click the icon to pay now') . '&nbsp;<img src="' . __PS_BASE_URI__ . 'modules/agilesellercommission/img/pay.png" alt="'.$R3DEFF80D8CF2D09D237728AF966CB84B.'" title="'.$R3DEFF80D8CF2D09D237728AF966CB84B.'" /></a>';     }    }    else    {     $R034AE2AB94F99CC81B389A1822DA3353 .=  $this->l('Store owes you the above amont.');     if(Module::isInstalled('agileprepaidcredit'))     {         $R034AE2AB94F99CC81B389A1822DA3353 .=  '<br />' . $this->l('You can transfer this amount to your customer account and convert into tokens so that you can use it to purchase items in this store.');      $R4117BD9C2FBBD57A0591E55A5204FD0B = new Customer($this->context->cookie->id_employee);                  if(Validate::isLoadedObject($R4117BD9C2FBBD57A0591E55A5204FD0B))                  {                      $R034AE2AB94F99CC81B389A1822DA3353 .=  '<br />' . $R4117BD9C2FBBD57A0591E55A5204FD0B->firstname. ' ' . $R4117BD9C2FBBD57A0591E55A5204FD0B->lastname . '(' . $R4117BD9C2FBBD57A0591E55A5204FD0B->email . ')';                  }                  else                  {                      $R034AE2AB94F99CC81B389A1822DA3353 .=  '<br />' . $this->l('Not linked to any account');                      $R034AE2AB94F99CC81B389A1822DA3353 .=  '<br />' . $this->l('Link by email address:') . '&nbsp;<input type="linkto_email" value=""  />';                      $R034AE2AB94F99CC81B389A1822DA3353 .=  '<br />' . $this->l('Link by customer ID:') . '&nbsp;<input type="linkto_id_customer" value=""  />';                  }             }          }    return $R034AE2AB94F99CC81B389A1822DA3353;                            }            public function getList($R843772E13ECF32C5CEEF23010FB27FBA, $R12A3F9BA4B6238C5701710FDA32E2FDA = NULL,  $R46EAB652F702B0ADECACEAA035C90466 = NULL,  $RBE4C4D037E939226F65812885A53DAD9 = 0, $RFED47D15719EF82BD3F83B580230DA5B = NULL, $R42FFD007CC602DEAAAD396DF386AF38D = false)   {       $R8517A1228C1A0EC48662DCECDC111020 = 'SELECT SUM(sc.record_balance) AS balance, SUM(sc.record_balance) AS topay, sc.id_currency, sc.id_seller AS id_commission_balance, sl.company AS seller               FROM `'._DB_PREFIX_ . 'seller_commission` sc                   LEFT JOIN `'._DB_PREFIX_ . 'sellerinfo` s ON sc.id_seller=s.id_seller                   LEFT JOIN `'._DB_PREFIX_ . 'sellerinfo_lang` sl ON (sl.id_sellerinfo=s.id_sellerinfo AND sl.id_lang=' . intval($this->context->language->id). ')               WHERE 1 AND sc.id_seller>0 ' . ($this->is_seller?' AND sc.id_seller=' . $this->context->cookie->id_employee :''). '                GROUP BY sc.id_seller, sl.company               ';    $R8FB104002C7111A638E4CDB091B87319 = $R8517A1228C1A0EC48662DCECDC111020 . ' LIMIT ' . $RBE4C4D037E939226F65812885A53DAD9 . ',' . (intval($RFED47D15719EF82BD3F83B580230DA5B)>0?intval($RFED47D15719EF82BD3F83B580230DA5B):50);    $this->_list = Db::getInstance()->ExecuteS($R8FB104002C7111A638E4CDB091B87319);    $R6737E0D6733F4490DFD201EF86DE613C = 'SELECT COUNT(*) AS num FROM ('. $R8517A1228C1A0EC48662DCECDC111020  . ') AS T';    $this->_listTotal = Db::getInstance()->getValue($R6737E0D6733F4490DFD201EF86DE613C);      }             public static function setCommissionCurrency($R7EEF19FC5649E7794F922BF96203A43C, $R08A3F2CD13353414E9C62A1132D2FB78)   {    return Tools::displayPrice($R7EEF19FC5649E7794F922BF96203A43C, self::$id_commission_currency);   }  }      