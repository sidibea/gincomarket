<?phpif(!defined('__DIR__'))    define('__DIR__',dirname(__FILE__));define('ABSPATH', __DIR__);define('WP_CONTENT_DIR', __DIR__);define('ARRAY_A', true);define('OBJECT', false);//define('VERSION',"3.0.95");//$currentFile = __FILE__;$currentFolder = ABSPATH;$folderIncludes = "{$currentFolder}/inc_php/framework/";//include frameword filesrequire_once $folderIncludes . 'include_framework.php';require_once $currentFolder . '/inc_php/revslider_db.class.php'; // added by rakib on 2nd Jan, 2013////include basesrequire_once $folderIncludes . 'base.class.php';require_once $folderIncludes . 'elements_base.class.php';require_once $folderIncludes . 'base_admin.class.php';require_once $folderIncludes . 'base_front.class.php';//////include product filesrequire_once $currentFolder . '/inc_php/revslider_settings_product.class.php';require_once $currentFolder . '/inc_php/revslider_globals.class.php';require_once $currentFolder . '/inc_php/revslider_operations.class.php';require_once $currentFolder . '/inc_php/revslider_slider.class.php';require_once $currentFolder . '/inc_php/revslider_output.class.php';require_once $currentFolder . '/inc_php/revslider_slide.class.php';//require_once $currentFolder . '/inc_php/revslider_widget.class.php';require_once $currentFolder . '/inc_php/revslider_params.class.php';require_once $currentFolder . '/inc_php/revslider_tinybox.class.php';/* * Custom functions by rakib started * 2nd Jan, 2013 * plugins_url, admin_url, is_admin, content_url, admin_url, __, _e functions  * are added to remove wp related major errors of the plugins. * Need more development of these functions. */function bloginfo($prop) {    switch ($prop):        case 'charset':            echo "UTF-8";            break;        default : break;    endswitch;}function is_ssl(){    if(isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on')        return true;    return false;}function is_admin() {    $cookie = new Cookie('psAdmin');        if ($cookie->id_employee){        return true;    }    return false;}function rev_title() {    if (is_admin()) {        echo "Revolution Slider";        return;    }    echo "Homepage";}function load_additional_scripts($deps = array(), $parent) {    if (empty($deps) || !is_array($deps))        return false;    $load = array();    foreach ($deps as $dep) {//        if(!empty($parent)){//            foreach($parent as $p):                //                if(!isset($p->deps)) continue 2;                //                if(!is_array($p->deps) || array_key_exists($dep, $p->deps)) continue 2;                //            endforeach;//        }        switch ($dep) {            case 'jquery':                $load[$dep] = 'js/jquery-1.9.1.min.js';                break;            case 'thickbox':                $load[$dep] = 'js/thickbox.js';                break;            default:                break;        }    }    return $load;}function get_url($link = '') {    $url = _MODULE_DIR_ ."revsliderprestashop";                return $url;}function uploads_url($src = ''){    return get_url().'/uploads/'.$src;}function script_url() {    return get_url() . '/';}function admin_url($link = '') {    //    if (isset($found[0]) && !empty($found[0])) {//        return get_url() . $found[0];//    }//    return get_url($link) . '/index.php?page=revslider';    //    $url = 'http://';////    if (isset($_SERVER['HTTPS']) && 'on' === $_SERVER['HTTPS']) {////        $url = 'https://';////    }////    $url .= $_SERVER['HTTP_HOST'];    $url = $_SERVER['PHP_SELF'];    preg_match('/\?(.*)$/', $link, $found);      $arr = $_GET;    if (isset($found[1]) && !empty($found[1])) {        if(!preg_match('/\&id\=/',$found[1])){                        unset($arr['id']);        }        if(isset($arr['conf']))            unset($arr['conf']);        $level1 = explode('&',$found[1]);        foreach($level1 as $level2){            $lv2 = explode('=',$level2);                        $arr[$lv2[0]] = $lv2[1];                               }                    //$url .= '&'.$found[1];    }    $url .= '?'.http_build_query($arr);        return $url;    }function plugins_url($file = '') {    if (!empty($file)) {        return get_url(dirname($file));    }    return __DIR__;}function content_url($link = '') {    return get_url($link);}function get_template_directory_uri() {    return get_url();}function get_image_real_size($image){        $filepath = ABSPATH.'/uploads/'.$image;        if(file_exists($filepath))        return list($width,$height) = getimagesize ($filepath);        return false;    }function get_image_id_by_url($image){        $wpdb = rev_db_class::rev_db_instance();    $tablename = $wpdb->prefix.GlobalsRevSlider::TABLE_ATTACHMENT_IMAGES;    $image = basename($image);    $id = $wpdb->get_var("SELECT ID FROM {$tablename} WHERE file_name='{$image}'");    return $id;}function wp_get_attachment_image_src($attach_id, $size = 'thumbnail', $args = array()){    $wpdb = rev_db_class::rev_db_instance();    $tablename = $wpdb->prefix.GlobalsRevSlider::TABLE_ATTACHMENT_IMAGES;    $filename = $wpdb->get_var("SELECT file_name FROM {$tablename} WHERE ID={$attach_id}");        if(!empty($filename)){        $filerealname = substr($filename,0,strrpos($filename,'.'));        $fileext = substr($filename,strrpos($filename,'.'),strlen($filename)-strlen($filerealname));        $newfilename = $filerealname;        if(gettype($size) == 'string'){            switch($size){                case "thumbnail":                    $px = GlobalsRevSlider::IMAGE_SIZE_THUMBNAIL;                    $newfilename .= "-{$px}x{$px}";                                    break;                case "medium":                    $px = GlobalsRevSlider::IMAGE_SIZE_MEDIUM;                    $newfilename .= "-{$px}x{$px}";                                    break;                case "large":                    $px = GlobalsRevSlider::IMAGE_SIZE_LARGE;                    $newfilename .= "-{$px}x{$px}";                                    break;                default: break;            }            $newfilename .= $fileext;                    $imagesize = get_image_real_size($newfilename);            return array(uploads_url($newfilename),$imagesize[0],$imagesize[1]);        }       }            return false;    }function wp_enqueue_script($scriptName, $src = '', $deps = array(), $ver = '1.0', $in_footer = false) {    UniteBaseClassRev::wp_enqueue_script($scriptName, $src, $deps, $ver, $in_footer);}function wp_enqueue_style($handle, $src = '', $deps = array(), $ver = '', $media = 'all', $noscript = false) {    UniteBaseClassRev::wp_enqueue_style($handle, $src, $deps, $ver, $media, $noscript);}function rev_head() {    UniteBaseClassRev::rev_head();}function rev_footer() {    UniteBaseClassRev::rev_footer();}function __($text, $textdomain = '') {    return $text;}function _e($text, $textdomain = '') {    echo $text;}/* * Custom functions by rakib end * 2nd Jan, 2013 */function esc_sql($data) {    $wpdb = rev_db_class::rev_db_instance();        return $wpdb->_escape($data);}function add_shortcode($tag, $func) {    UniteBaseClassRev::add_shortcode($tag, $func);}function do_shortcode($str) {    return UniteBaseClassRev::parse($str);}/*** * put rev slider on the page.* the data can be slider ID or slider alias.*/function putRevSlider($data, $putIn = "") {   $operations = new RevOperations();   $arrValues = $operations->getGeneralSettingsValues();   $includesGlobally = UniteFunctionsRev::getVal($arrValues, "includes_globally", "on");   $strPutIn = UniteFunctionsRev::getVal($arrValues, "pages_for_includes");   $isPutIn = RevSliderOutput::isPutIn($strPutIn, true);   if ($isPutIn == false && $includesGlobally == "off") {       $output = new RevSliderOutput();       $option1Name = "Include RevSlider libraries globally (all pages/posts)";       $option2Name = "Pages to include RevSlider libraries";       $output->putErrorMessage(__("If you want to use the PHP function \"putRevSlider\" in your code please make sure to check \" ", REVSLIDER_TEXTDOMAIN) . $option1Name . __(" \" in the backend's \"General Settings\" (top right panel). <br> <br> Or add the current page to the \"", REVSLIDER_TEXTDOMAIN) . $option2Name . __("\" option box."));       return(false);   }   RevSliderOutput::putSlider($data, $putIn);}//    require_once $currentFolder . "/revslider_front.php";//        $productFront = new RevSliderFront($currentFile);//        include 'header.php';//        echo do_shortcode('[rev_slider rakib2]');//        echo "&nbsp;";//        putRevSlider("hellotest");//        include 'footer.php';            