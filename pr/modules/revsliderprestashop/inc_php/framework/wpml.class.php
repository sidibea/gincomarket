<?php	class UniteWpmlRev{				/**		 * 		 * true / false if the wpml plugin exists		 */		public static function isWpmlExists(){			return true;			if(class_exists("SitePress"))				return(true);			else				return(false);		}				/**		 * 		 * valdiate that wpml exists		 */		private static function validateWpmlExists(){			if(!self::isWpmlExists())				UniteFunctionsRev::throwError("The wpml plugin don't exists");		}				/**		 * 		 * get languages array		 */		public static function getArrLanguages($getAllCode = true){                        			//self::validateWpmlExists();			//$wpml = new SitePress();                        			//$arrLangs = $wpml->get_active_languages();			$arrLangs = Language::getLanguages();			$response = array();						if($getAllCode == true)				$response["all"] = __("All Languages",REVSLIDER_TEXTDOMAIN);						foreach($arrLangs as $code=>$arrLang){                                $ind = $arrLang['iso_code'];                            				$response[$ind] = $arrLang['name'];			}						return($response);		}				/**		 * 		 * get assoc array of lang codes		 */		public static function getArrLangCodes($getAllCode = true){						$arrCodes = array();						if($getAllCode == true)				$arrCodes["all"] = "all";							//self::validateWpmlExists();			//$wpml = new SitePress();			//$arrLangs = $wpml->get_active_languages();			$arrLangs = Language::getLanguages();			foreach($arrLangs as $code=>$arr){                                                                $ind = $arr['iso_code'];                            				$arrCodes[$ind] = $ind;			}                        			return($arrCodes);		}						/**		 * 		 * check if all languages exists in the given langs array		 */		public static function isAllLangsInArray($arrCodes){			$arrAllCodes = self::getArrLangCodes();			$diff = array_diff($arrAllCodes, $arrCodes);			return(empty($diff));		}						/**		 * 		 * get langs with flags menu list		 * @param $props		 */		public static function getLangsWithFlagsHtmlList($props = "",$htmlBefore = ""){			$arrLangs = self::getArrLanguages();			if(!empty($props))				$props = " ".$props;						$html = "<ul".$props.">"."\n";			$html .= $htmlBefore;					foreach($arrLangs as $code=>$title){                                				$urlIcon = self::getFlagUrl($code);								$html .= "<li data-lang='".$code."' class='item_lang'><a data-lang='".$code."' href='javascript:void(0)'>"."\n";				$html .= "<img src='".$urlIcon."'/> $title"."\n";								$html .= "</a></li>"."\n";			}			$html .= "</ul>";									return($html);		}					/**		 * get flag url		 */		public static function getFlagUrl($code){			$arrLangs = Language::getLanguages();                        $language = Context::getContext()->language;                        //var_dump($language->id);                        //$language->id == Configuration::get('PS_LANG_DEFAULT')                                                if($code == 'all'){                            $url = get_url().'/images/icon16.png';                                                    }                        else{                            $url = '';                            foreach($arrLangs as $lang){                                                                if($lang['iso_code'] == $code)                                    $url = _THEME_LANG_DIR_.$lang['id_lang'].'.jpg';                            }                        }                                                                        //			self::validateWpmlExists();////			$wpml = new SitePress();////			////			if(empty($code) || $code == "all")////				$url = ICL_PLUGIN_URL . '/res/img/icon16.png';////			else////				$url = $wpml->get_flag_url($code);////			////			//default: show all////			if(empty($url))////				$url = ICL_PLUGIN_URL . '/res/img/icon16.png';////						return($url);		}						/**		/* get language details by code		 */		private function getLangDetails($code){	        global $wpdb;				        $details = $wpdb->get_row("SELECT * FROM ".$wpdb->prefix."icl_languages WHERE code='$code'");	        	        if(!empty($details))	        	$details = (array)$details;	        	        return($details);		}						/**		 * 		 * get language title by code		 */		public static function getLangTitle($code){						$langs = self::getArrLanguages();						if($code == "all")				return(__("All Languages", REVSLIDER_TEXTDOMAIN));						if(array_key_exists($code, $langs))				return($langs[$code]);							$details = self::getLangDetails($code);			if(!empty($details))				        	return($details["english_name"]);	       				return("");		}						/**		 * 		 * get current language		 */		public static function getCurrentLang(){                        //var_dump(Context::getContext()->language);                                            $language = Context::getContext()->language;                                                $lang = $language->iso_code;                        //			self::validateWpmlExists();////			$wpml = new SitePress();                                                //			if(is_admin())////				$lang = $wpml->get_default_language();////			else////				$lang = UniteFunctionsWPRev::getCurrentLangCode();						return($lang);		}			}